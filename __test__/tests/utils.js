const _0x102be8 = _0x21ab; (function (_0x355483, _0x5f33d6) { const _0x4bb8f1 = _0x21ab, _0x538752 = _0x355483(); while (!![]) { try { const _0x4e9d2e = -parseInt(_0x4bb8f1(0x175)) / 0x1 * (-parseInt(_0x4bb8f1(0x181)) / 0x2) + parseInt(_0x4bb8f1(0x180)) / 0x3 + -parseInt(_0x4bb8f1(0x16f)) / 0x4 * (parseInt(_0x4bb8f1(0x178)) / 0x5) + parseInt(_0x4bb8f1(0x184)) / 0x6 * (parseInt(_0x4bb8f1(0x17b)) / 0x7) + parseInt(_0x4bb8f1(0x172)) / 0x8 + parseInt(_0x4bb8f1(0x171)) / 0x9 * (parseInt(_0x4bb8f1(0x174)) / 0xa) + -parseInt(_0x4bb8f1(0x186)) / 0xb; if (_0x4e9d2e === _0x5f33d6) break; else _0x538752['push'](_0x538752['shift']()); } catch (_0x574efe) { _0x538752['push'](_0x538752['shift']()); } } }(_0x2ef5, 0x4d008)); const _0x44ec72 = (function () { let _0x3a3c9a = !![]; return function (_0x20200f, _0x57a29c) { const _0x5858b9 = _0x3a3c9a ? function () { const _0x8119f = _0x21ab; if (_0x57a29c) { const _0x5b8f51 = _0x57a29c[_0x8119f(0x182)](_0x20200f, arguments); return _0x57a29c = null, _0x5b8f51; } } : function () { }; return _0x3a3c9a = ![], _0x5858b9; }; }()), _0x596fdc = _0x44ec72(this, function () { const _0xea9e64 = _0x21ab; return _0x596fdc[_0xea9e64(0x176)]()[_0xea9e64(0x17f)](_0xea9e64(0x18b))['toString']()[_0xea9e64(0x17d)](_0x596fdc)[_0xea9e64(0x17f)](_0xea9e64(0x18b)); }); _0x596fdc(); const _0x11bc45 = (function () { let _0x288609 = !![]; return function (_0x5c9800, _0x1f8dae) { const _0x5a262a = _0x288609 ? function () { const _0x2917ad = _0x21ab; if (_0x1f8dae) { const _0x4f2751 = _0x1f8dae[_0x2917ad(0x182)](_0x5c9800, arguments); return _0x1f8dae = null, _0x4f2751; } } : function () { }; return _0x288609 = ![], _0x5a262a; }; }()), _0x4d1926 = _0x11bc45(this, function () { const _0x12f849 = _0x21ab, _0x4f4c6c = function () { const _0x36994e = _0x21ab; let _0x8ff97a; try { _0x8ff97a = Function('return\x20(function()\x20' + _0x36994e(0x173) + ');')(); } catch (_0x1d23c3) { _0x8ff97a = window; } return _0x8ff97a; }, _0xfea470 = _0x4f4c6c(), _0x4c13f1 = _0xfea470[_0x12f849(0x179)] = _0xfea470[_0x12f849(0x179)] || {}, _0x3965ac = ['log', _0x12f849(0x18a), _0x12f849(0x17e), _0x12f849(0x189), _0x12f849(0x188), 'table', _0x12f849(0x183)]; for (let _0x5caabc = 0x0; _0x5caabc < _0x3965ac[_0x12f849(0x187)]; _0x5caabc++) { const _0x577dc5 = _0x11bc45['constructor'][_0x12f849(0x170)]['bind'](_0x11bc45), _0x333280 = _0x3965ac[_0x5caabc], _0x4f13f5 = _0x4c13f1[_0x333280] || _0x577dc5; _0x577dc5[_0x12f849(0x17c)] = _0x11bc45[_0x12f849(0x18c)](_0x11bc45), _0x577dc5[_0x12f849(0x176)] = _0x4f13f5['toString'][_0x12f849(0x18c)](_0x4f13f5), _0x4c13f1[_0x333280] = _0x577dc5; } }); _0x4d1926(); const { importPrvKey, rsaDecrypt, symDecrypt } = require(_0x102be8(0x17a)); function _0x2ef5() { const _0x2e1490 = ['157983OExbLy', 'toString', 'slice', '5fZbdLl', 'console', '../../src/crypto', '7EQkRic', '__proto__', 'constructor', 'info', 'search', '858936FnDLjA', '6zlpWWC', 'apply', 'trace', '2814402eRbZvE', 'log', '9506706qjTvWX', 'length', 'exception', 'error', 'warn', '(((.+)+)+)+$', 'bind', 'exports', '2074392EkWZmB', 'prototype', '2007vLynrE', '1105656uflUtJ', '{}.constructor(\x22return\x20this\x22)(\x20)', '14830UNBWaB']; _0x2ef5 = function () { return _0x2e1490; }; return _0x2ef5(); } function _0x21ab(_0x1dc25b, _0x590496) { const _0x3cd8ce = _0x2ef5(); return _0x21ab = function (_0x4d1926, _0x11bc45) { _0x4d1926 = _0x4d1926 - 0x16e; let _0x3d8dd1 = _0x3cd8ce[_0x4d1926]; return _0x3d8dd1; }, _0x21ab(_0x1dc25b, _0x590496); } function parseReceivedMessage(_0x11c529) { const _0x1e0f87 = _0x102be8; return { 'rsaEncryptedSymmKey': _0x11c529[_0x1e0f87(0x177)](0x0, 0x158), 'cipherText': _0x11c529['slice'](0x158) }; } async function validateEncryption(_0x323a1e, _0x9383e1, _0x4e46e2) { const _0x5ead54 = _0x102be8; if (_0x323a1e === null || _0x9383e1 === null) throw new Error('lastReceivedEncryptedMessage\x20or\x20lastReceivedDecryptedMessage\x20is\x20null'); const { rsaEncryptedSymmKey: _0x30fdee, cipherText: _0x246644 } = parseReceivedMessage(_0x323a1e), _0x20d401 = await rsaDecrypt(_0x30fdee, await importPrvKey(_0x4e46e2)), _0x1efec4 = await symDecrypt(_0x20d401, _0x246644); return console[_0x5ead54(0x185)]('isValid', _0x1efec4, _0x9383e1), _0x1efec4[_0x5ead54(0x177)](0xa) === _0x9383e1; } module[_0x102be8(0x16e)] = { 'validateEncryption': validateEncryption };